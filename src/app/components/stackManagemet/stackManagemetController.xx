
App.controller('stackManagemetController', function($scope,$compile,$http) {
    $scope.appLauncherUrl = "https://XAPPADDRX/applauncher/";
    $scope.listStackUrl = $scope.appLauncherUrl + "listStack";
    $scope.state = 'test 222';
    $scope.jobName = "";
    $scope.srcUrl  ="";
    $scope.opsUrl = "";
    $scope.coutapplicationfile = 0;
    $scope.coutappendOperationsStack =0;
    $scope.ApplicationFiles;
    $scope.OperationStacks;
    $scope.test = function(id){
            alert('test'+id);
    };
    
   $scope.appendApplicationFile = function(){
       $scope.coutapplicationfile = $scope.coutapplicationfile + 1;
        var myEl = angular.element( document.querySelector( '#divApplicationFile' ) );
        var toadd = '<div class = "col-xs-12 " id = "'+"divAppFileNumber"+$scope.coutapplicationfile+'">'+
                        '<div class = "input-group ">'+
                            '<input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty" ng-model ="ApplicationFiles.ApplicationFileNum'+$scope.coutapplicationfile+'" ng-change= "Urlvalidation(ApplicationFiles.ApplicationFileNum'+$scope.coutapplicationfile+', \''+"divAppFileNumber"+$scope.coutapplicationfile+'\')" placeholder="compose file">'+
                            '<span class="input-group-addon" ng-click="appendApplicationFile()"><i class="glyphicon glyphicon-plus green-icon"></i></span>'+
                            '<span class="input-group-addon" ng-click="removeDiv(\''+"divAppFileNumber"+$scope.coutapplicationfile+'\');removeApplicationFiles(\'ApplicationFileNum'+$scope.coutapplicationfile+'\');"><i " class="glyphicon glyphicon-minus red-icon"></i></span>'+
                           '</div>'+
                    '</div>';
        var generated = myEl.append(toadd); 
        var appendedElement = angular.element( document.querySelector( '#divAppFileNumber'+$scope.coutapplicationfile ) );
        $compile(appendedElement)($scope);
        
   };

   $scope.removeApplicationFiles = function(fileNumber) { 
        delete $scope.ApplicationFiles[fileNumber];
   };
   $scope.removeOperationsStack = function(fileNumber) { 
        delete $scope.OperationStacks[fileNumber];
   }
   $scope.removeDiv = function (id) {
          var totalSiblind = $("#"+id).parent().children().length;
          if(totalSiblind > 1){
             var iEl = angular.element( document.querySelector( '#'+id) );
             iEl.remove(); 
          }
        };
    $scope.appendOperationsStack = function(){
       $scope.coutappendOperationsStack = $scope.coutappendOperationsStack + 1;
        var myEl = angular.element( document.querySelector( '#divOperationsStack' ) );
        var toadd = '<div class = "col-xs-12" id = "'+"divOperationStackNumber"+$scope.coutappendOperationsStack+'">'+
                        '<div class = "input-group">'+
                            '<input type="text" class="form-control ng-pristine ng-untouched ng-valid ng-empty"   ng-model ="OperationStacks.OperationStackNum'+$scope.coutappendOperationsStack+'" ng-change= "Urlvalidation(OperationStacks.OperationStackNum'+$scope.coutappendOperationsStack+', \''+"divOperationStackNumber"+$scope.coutappendOperationsStack+'\' )" placeholder="compose file">'+
                            '<span class="input-group-addon" ng-click="appendOperationsStack()"><i  class="glyphicon glyphicon-plus red-icon"></i></span>'+
                            '<span class="input-group-addon" ng-click="removeDiv(\''+"divOperationStackNumber"+$scope.coutappendOperationsStack+'\');removeOperationsStack(\'OperationStackNum'+$scope.coutappendOperationsStack+'\');"><i class="glyphicon glyphicon-minus red-icon"></i></span>'+
                        '</div>'+
                    '</div>';
        var generated = myEl.append(toadd); 
        var appendedElement = angular.element( document.querySelector( '#divOperationStackNumber'+$scope.coutappendOperationsStack ) );
        $compile(appendedElement)($scope);
        
   };
   
    $scope.createJenkinsBuild = function(){
        var srcURL=""; 
        var opsURL="";
        var configURL = $scope.configURL;
        var buildName = $scope.jobName;
        
        var values = $scope.ApplicationFiles;
        angular.forEach(values, function(value, key) {
            srcURL = srcURL + value +';' ;
        });
        console.log("src url "+srcURL);
        
        var values = $scope.OperationStacks;
        angular.forEach(values, function(value, key) {
            opsURL = opsURL + value +';' ;
        });
         console.log("opsURL "+opsURL); 
          
           var jenkinsURL = $scope.appLauncherUrl  + "createJenkinsBuild?jobName=" + buildName 
                                   + "&configGitHubURL=" + configURL
                                   + "&appsCompose=" + srcURL
                                   + "&opsCompose=" + opsURL;
          $http({
                method : 'GET',
                url : jenkinsURL
            }).then(function successCallback(response) {
                console.log(response)
            }, function errorCallback(response) {
                console.log(response.statusText);
            });
          $scope.listStack();
          $scope.jobList();
    };
    
    
    $scope.startBuild = function() {
    var buildName =  $scope.jobName;
    var startBuildUrl = $scope.appLauncherUrl + "startJenkinsBuild?jobName=" + buildName;
       $http({
            method : 'GET',
                url : startBuildUrl
            }).then(function successCallback(response) {
                console.log(response)
            }, function errorCallback(response) {
                console.log(response.statusText);
            });    
    };
     $scope.runStack = function(val) {
    var buildName =  $scope.jobName;
    var startBuildUrl =$scope.appLauncherUrl + "startJenkinsBuild?jobName=" + val;
       $http({
            method : 'GET',
                url : startBuildUrl
            }).then(function successCallback(response) {
                console.log(response)
            }, function errorCallback(response) {
                console.log(response.statusText);
            });    
    };
    
    
    $scope.deleteStack = function(val) {
    var deleteStackUrl =$scope.appLauncherUrl + "deleteStack?stackName=" + val;
       $http({
            method : 'GET',
                url : deleteStackUrl
            }).then(function successCallback(response) {
                console.log(response)
            }, function errorCallback(response) {
                console.log(response.statusText);
        });
        $scope.listStack();
        $scope.jobList();
    };
     $scope.deleteJob = function(val) {
         var deleteStackUrl = $scope.appLauncherUrl  + "deleteJob?jobName=" + val; 
          $http({
                method : 'GET',
                url : deleteStackUrl
            }).then(function successCallback(response) {
                console.log(response)
            }, function errorCallback(response) {
                console.log(response.statusText);
            });
             $scope.listStack();
             $scope.jobList();
    };
   
    
    $scope.jobList = function (){
        var jobListUrl = $scope.appLauncherUrl + "jobList";
        $http.get(jobListUrl,{}).success(function (data) {   $scope.jobListDatas =  data ;});                  
    };                            
                                
     $scope.jobList();

    $scope.listStack = function() {
        $http.get($scope.listStackUrl,{}).success(function (data){ $scope.listStackDatas = data ;}); 
        
    };
    $scope.listStack();

    $scope.deleteListStack = function (stackName){
        var deleteStackUrl =  $scope.appLauncherUrl  + "deleteStack" ;
        $http.get(deleteStackUrl,{'stackName': stackName}).success(function (data){  }); 
    };
    $scope.Urlvalidation= function(inputValue, divId){
         var newStrValue = new RegExp ( '/blob/' );
        if(newStrValue.test(inputValue) == false  || inputValue == '' ){
            var id = "#"+divId;
             $(id).css("border", "1px solid red");
        }else{
             var id = "#"+divId;
            $(id).css("border", "1px solid green");
        } 
    };
    
   var reloadTimer= setInterval(reloadfunctions, 2000);
   function reloadfunctions() { $scope.listStack(); $scope.jobList();};
});
